name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Generate fountain data
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: |
        # Only run data generation if Supabase credentials are available
        if [ -n "$SUPABASE_URL" ] && [ -n "$SUPABASE_KEY" ]; then
          echo "Generating fresh data from Supabase..."
          python scripts/generate_geojson_api.py
        else
          echo "Using existing static data (no Supabase credentials provided)"
        fi
        
    - name: Configure app for GitHub Pages
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
      run: |
        # Update config.js with actual values if available
        if [ -n "$SUPABASE_URL" ] && [ -n "$SUPABASE_KEY" ]; then
          echo "Configuring with Supabase credentials..."
          cat > docs/config.js << EOF
        // Configuration for GitHub Pages deployment
        window.APP_CONFIG = {
            SUPABASE_URL: '$SUPABASE_URL',
            SUPABASE_ANON_KEY: '$SUPABASE_KEY',
            ADMIN_PASSWORD: '${ADMIN_PASSWORD:-default_admin_pass}',
            ENABLE_SUPABASE: true,
            FALLBACK_TO_GEOJSON: true,
            MAP_CENTER: [49.251, -123.060],
            MAP_ZOOM: 11,
            GEOJSON_PATH: 'data/fountains_processed.geojson',
            VERSION: '1.0.0',
            DEPLOYMENT_TYPE: 'github-pages'
        };
        
        // Auto-detect Supabase configuration
        if (window.APP_CONFIG.SUPABASE_URL && window.APP_CONFIG.SUPABASE_ANON_KEY) {
            console.log('✅ Supabase integration enabled');
        } else {
            console.log('📁 Using static data mode');
        }
        EOF
        else
          echo "Using default configuration (static data only)..."
          # Update just the admin password if provided
          if [ -n "$ADMIN_PASSWORD" ]; then
            sed -i "s/ADMIN_PASSWORD: 'default_admin_pass'/ADMIN_PASSWORD: '$ADMIN_PASSWORD'/" docs/config.js
          fi
        fi
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs
        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
